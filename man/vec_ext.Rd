% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/equality.R
\name{vec_assert_numeric}
\alias{vec_assert_numeric}
\alias{vec_cast_integerish}
\alias{vec_assert_integerish}
\alias{vec_is_integerish}
\title{vec_assert_numeric}
\usage{
vec_assert_numeric(x, size = NULL, arg = rlang::as_label(substitute(x)))

vec_cast_integerish(x, arg = rlang::as_label(x))

vec_assert_integerish(x, size = NULL, arg = rlang::as_label(substitute(x)))

vec_is_integerish(x, size = NULL, arg = rlang::as_label(substitute(x)))
}
\arguments{
\item{x}{Vector to test.}

\item{size}{Desired size. Can be \code{NULL}.}

\item{arg}{Arg name for error message.}
}
\value{
Invisibly returns \code{x} cast to \code{double()}

\code{x} cast to \code{integer()} if \code{x} is coercible to \code{integer()}
i.e. \code{5.0} is converted to \code{5L}, while \code{5.1} triggers an exception.

Invisibly returns \code{x} cast to \code{integer()}.

Returns \code{TRUE} if the input can be losslessly coerced to \code{integer()}.
}
\description{
vec_assert_numeric

vec_cast_integerish

vec_assert_integerish

vec_is_integerish
}
